rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Funci√≥n auxiliar para verificar si el usuario es admin
    function isAdmin() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Reglas para usuarios
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        request.auth.uid == userId || 
        isAdmin()
      );
    }
    
    // Reglas para cabinas
    match /booths/{boothId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin();
    }
    
    // Reglas para reservas
    match /reservations/{reservationId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.userId ||
        isAdmin()
      );
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      allow update: if request.auth != null && (
        request.auth.uid == resource.data.userId ||
        isAdmin()
      );
      allow delete: if request.auth != null && isAdmin();
    }
    
    // Reglas para slots de tiempo
    match /timeSlots/{slotId} {
      allow read: if true;
      allow write: if request.auth != null && (
        request.resource.data.userId == request.auth.uid ||
        isAdmin()
      );
    }
  }
} 